on:
  push:
    branches: [ main, overture ]

jobs:

  hello-world:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:

          - release: buster
            date: 20210507
            body: lite
            url-armhf: http://imrc.noip.me/data/2021-05-07-raspios-buster-armhf-lite.zip
            url-arm64: http://imrc.noip.me/data/2021-05-07-raspios-buster-arm64-lite.zip

    steps:
      - name: Import Raspberry Pi Foundation's PGP key
        run: curl -fL 'https://www.raspberrypi.org/raspberrypi_downloads.gpg.key' | gpg --import -
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate armhf image
        if: ${{ matrix.url-armhf != '' }}
        run: bash generate-root.bash 'arm' '${{ matrix.url-armhf }}'
      - name: Generate arm64 image
        if: ${{ matrix.url-arm64 != '' }}
        run: bash generate-root.bash 'arm64' '${{ matrix.url-arm64 }}'
      - name: List platforms
        id: platforms
        run: |
          [ -n '${{ matrix.url-armhf }}' ] && list+=(linux/arm/v6)
          [ -n '${{ matrix.url-arm64 }}' ] && list+=(linux/arm64)
          echo "Platforms: ${list[*]}"
          IFS=','
          echo "::set-output name=list::${list[*]}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ steps.platforms.outputs.list }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/raspberry-pi-os:${{ matrix.release }}-${{ matrix.date }}-${{ matrix.body }}
