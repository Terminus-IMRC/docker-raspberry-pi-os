on:
  push:
    branches: [ main, overture ]

jobs:

  hello-world:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:

          - releases: bullseye,stable
            date: 20211030
            body: lite
            url-armhf: http://imrc.noip.me/rpi/img/2021-10-30-raspios-bullseye-armhf-lite.zip
            url-arm64: http://imrc.noip.me/rpi/img/2021-10-30-raspios-bullseye-arm64-lite.zip
            additional-tags: bullseye-lite,stable-lite,latest

          - releases: buster,oldstable
            date: 20210507
            body: lite
            url-armhf: http://imrc.noip.me/rpi/img/2021-05-07-raspios-buster-armhf-lite.zip
            url-arm64: http://imrc.noip.me/rpi/img/2021-05-07-raspios-buster-arm64-lite.zip
            additional-tags: buster-lite,oldstable-lite,latest

          - releases: stretch,oldoldstable
            date: 20190408
            body: lite
            url-armhf: http://imrc.noip.me/rpi/img/2019-04-08-raspbian-stretch-lite.zip
            additional-tags: stretch-lite,oldoldstable-lite

    steps:
      - name: List platforms
        id: platforms
        run: |
          IFS=,
          [ -n '${{ matrix.url-armhf }}' ] && list+=(linux/arm/v6)
          [ -n '${{ matrix.url-arm64 }}' ] && list+=(linux/arm64)
          echo "Platforms: ${list[@]}"
          echo "::set-output name=list::${list[*]}"
      - name: List tags
        id: tags
        run: |
          IFS=,
          read -r -a releases <<< '${{ matrix.releases }}'
          read -r -a list <<< '${{ matrix.additional-tags }}'
          list=("${releases[@]/%/-${{ matrix.date }}-${{ matrix.body }}}" "${list[@]}")
          echo "Tags: ${list[@]}"
          echo "::set-output name=list::${list[*]/#/${{ secrets.DOCKERHUB_USERNAME }}/raspberry-pi-os:}"

      - name: Import Raspberry Pi Foundation's PGP key
        run: curl -fL 'https://www.raspberrypi.org/raspberrypi_downloads.gpg.key' | gpg --import -

      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate armhf root image
        if: ${{ matrix.url-armhf != '' }}
        run: bash generate-root.bash 'arm' '${{ matrix.url-armhf }}'
      - name: Generate arm64 root image
        if: ${{ matrix.url-arm64 != '' }}
        run: bash generate-root.bash 'arm64' '${{ matrix.url-arm64 }}'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ steps.platforms.outputs.list }}
          push: true
          tags: ${{ steps.tags.outputs.list }}
